{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Nodejs/e-dashbord/frontend/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  // const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const auth = localStorage.getItem('user');\n    if (auth) {\n      navigate('/');\n    }\n  });\n  const validateForm = () => {\n    const newErrors = {};\n    if (!email) {\n      newErrors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = \"Invalid email address\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const loginUser = async () => {\n    if (validateForm()) {\n      let item = {\n        email,\n        password\n      };\n      let result = await fetch('http://localhost:8000/login', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(item)\n      });\n      result = await result.json();\n      localStorage.setItem('user-info', JSON.stringify(result));\n      navigate('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-register-page  login-page center container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-page col-ms-1  col-ms-1 \",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-login-input-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"form-control inputBox\",\n            placeholder: \"Enter email or User name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errer\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: \"form-control inputBox\",\n            placeholder: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: loginUser,\n          className: \"btn btn-primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"aCryTLktpyABL0htA3TVD9boPEw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","errors","setErrors","navigate","auth","localStorage","getItem","validateForm","newErrors","test","Object","keys","length","loginUser","item","result","fetch","method","headers","body","JSON","stringify","json","setItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Nodejs/e-dashbord/frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState ,useEffect} from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    // const [username, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const navigate = useNavigate();\n    useEffect(()=>{\n        const auth =localStorage.getItem('user');\n        if(auth){\n            navigate('/')\n        }\n    })\n const validateForm =()=>{\n    const newErrors = {};\n\n    if (!email) {\n        newErrors.email = \"Email is required\";\n      } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        newErrors.email = \"Invalid email address\";\n      }\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n   }\n   const loginUser = async()=> {\n        if (validateForm()) {\n        let item = { email, password }\n        let result = await fetch('http://localhost:8000/login', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(item)\n        });\n        result = await result.json();\n        localStorage.setItem('user-info', JSON.stringify(result));\n        navigate('/');\n    }\n}\n    return (\n         <>\n            <div className=\"main-register-page  login-page center container\">\n                <div className=\"register-page col-ms-1  col-ms-1 \">\n                    <h2>Login</h2>\n                    <br></br>\n                    <div className=\"main-login-input-page\">\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"form-control inputBox\" placeholder=\"Enter email or User name\"/>\n                    {errors.email && <span className=\"errer\">{errors.email}</span>}\n                    <br></br>\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"form-control inputBox\" placeholder=\"Enter Password\"/>\n           \n                    <br></br>\n                    </div>\n                    <button type=\"submit\" onClick={loginUser} className=\"btn btn-primary\">Login</button>\n                    <br></br>\n                    <Link to=\"/signup\">Sign Up</Link>\n                    \n                </div>\n            </div>\n        </>\n    )\n}\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}